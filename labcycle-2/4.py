# -*- coding: utf-8 -*-
"""labcycle2: 4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ClkUJ7_RCJ-_OrwBgXDHLrH-mYvi3x74
"""

# 4.Write a program to create a class Box with data members length, 
#   breadth, height, area, and volume. Provider constructor that enables 
#   initialization with one parameter (for cube), two parameters (for
#   square prism) three parameters (rectangular prism). Also, provide 
#   functions to calculate area and volume.
#   Create a list of N boxes with random measurements and print the 
#   details of the box with maximum volume: area ratio.

#creating class Box
class Box:

  __length= None
  __breadth= None
  __height= None
  __area= None
  __volume= None

#constructing which can initialise multiple values
  def __init__(self,*p):
    if len(p)==1:
      self.__length= p[0]
      self.__breadth= p[0]
      self.__height= p[0]

    elif len(p)==2:
      self.__length= p[0]
      self.__breadth= p[0]
      self.__height= p[1]

    elif len(p)==3:
      self.__length= p[0]
      self.__breadth= p[1]
      self.__height= p[2]

# function to calculate area
  def AREA(self):
    self.__area= 2*(self.__length*self.__breadth + self.__length*self.__height + self.__breadth*self.__height)
    return self.__area
   
# function to calculate volume
  def VOLUME(self):
    self.__volume= self.__length*self.__breadth*self.__height
    return self.__volume

# function to display details 
  def display(self):
    print(" ")
    print("Details of the Box")
    print("length  : ",self.__length)
    print("Breadth : ",self.__breadth)
    print("Height  : ",self.__height)
    print(" ")
    print("Area    : ",self.__area)
    print("Volume  : ",self.__volume)
    print(" ")

#function to calculate area
  def get_ratio(self):
   p= (self.__volume)/(self.__area)
   return p

#generating random inputs   
import random  
n= int(input("Enter the number of objects that should be made : "))
l1=[]
c=0

for i in range (0,n,3):
  while c!=n:
    l1.insert(i,Box(random.randrange(1,50,1)))
    c=c+1
    l1.insert(i+1,Box(random.randrange(1,50,1),random.randrange(1,50,1)))
    c=c+1
    l1.insert(i+2,Box(random.randrange(1,50,1),random.randrange(1,50,1),random.randrange(1,50,1)))
    c=c+1
    break

#calculating area and volume
for i in range (0,n):
  l1[i].AREA()
  l1[i].VOLUME()
l2=[]

#taking total ratio
for i in range (0,n):
  l2.append(l1[i].get_ratio())

# to check all objects with randum input
for i in range (0,n):
  l1[i].display()
  print("Ratio : ",l1[i].get_ratio())

#checking for greatest ratio
for i in range (0,n):
  if max(l2)==l1[i].get_ratio():
     print(" ")
     print("Greatest Ratio ")
     l1[i].display()
     print("Ratio : ",l1[i].get_ratio())